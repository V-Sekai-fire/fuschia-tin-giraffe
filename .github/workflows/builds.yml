name: Builds

on:
  push:
    branches:
      - main
      - tarballs
  pull_request:

env:
  UNATTENDED: 1
  SDK_VERSION: 14.0
  TARGET_DIR: /tmp/osxcross_target

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-deploy
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run a script
        run: |
          ./build.sh
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # - name: Upload Release Assets
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       const fs = require('fs');
      #       const path = require('path');
      #       const artifacts = [
      #         'vsekai_game_windows_x86_64.zip', 
      #         'vsekai_game_linux_x86_64.zip',
      #         'vsekai_game_mac_x86_64.zip',
      #         'vsekai_editor_windows_x86_64.zip',
      #         'vsekai_editor_linux_x86_64.zip',
      #         'vsekai_editor_mac_x86_64.zip',
      #         './bin/godot.windows.editor.x86_64.llvm.exe',
      #         './bin/godot.linuxbsd.editor.x86_64.llvm',
      #         './bin/godot.osx.editor.x86_64'
      #       ];
      #       for (const artifact of artifacts) {
      #         const filePath = path.join(process.env.GITHUB_WORKSPACE, artifact);
      #         if (fs.existsSync(filePath)) {
      #           await github.repos.uploadReleaseAsset({
      #             owner: context.repo.owner,
      #             repo: context.repo.repo,
      #             release_id: context.payload.release.id,
      #             name: path.basename(artifact),
      #             data: fs.readFileSync(filePath),
      #             headers: {
      #               'content-length': fs.statSync(filePath).size,
      #               'content-type': 'application/zip',
      #             },
      #           });
      #         }
      #       }
